{"version":3,"file":"mosaic-examples.js","sources":["../../src/mosaic-examples/index.ts","../../src/mosaic-examples/example-data.ts","../../src/mosaic-examples/example-module.ts","../../src/mosaic-examples/button-basic/button-basic-example.ts","../../src/mosaic-examples/mosaic-module.ts"],"sourcesContent":["/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n\nexport {ExampleMosaicModule as Éµa} from './mosaic-module';","// The example-module file will be auto-generated. As soon as the\n// examples are being compiled, the module file will be generated.\nimport { EXAMPLE_COMPONENTS } from './example-module';\n\n\n/**\n * Example data\n *   with information about Component name, selector, files used in example, and path to examples\n */\nexport class ExampleData {\n\n  /** Description of the example. */\n  description: string;\n\n  /** Path to the example. This is based on the structure of the repo. */\n  examplePath: string;\n\n  /** List of files that are part of this example. */\n  exampleFiles: string[];\n\n  /** Selector name of the example component. */\n  selectorName: string;\n\n  /** Name of the file that contains the example component. */\n  indexFilename: string;\n\n  /**\n   * Name of the example component. For examples with multiple components, this property will\n   * include multiple components that are comma separated (e.g. dialog-overview)\n   */\n  componentName: string;\n\n  constructor(example: string) {\n    if (!example || !EXAMPLE_COMPONENTS.hasOwnProperty(example)) {\n      return;\n    }\n\n    const exampleConfig = EXAMPLE_COMPONENTS[example];\n\n    // TODO(tinayuangao): Do not hard-code extensions\n    this.exampleFiles = ['html', 'ts', 'css'].map((extension) => `${example}-example.${extension}`);\n    this.examplePath = `/assets/stackblitz/examples/${example}/`;\n    this.selectorName = this.indexFilename = `${example}-example`;\n\n    if (exampleConfig.additionalFiles) {\n      this.exampleFiles.push(...exampleConfig.additionalFiles);\n    }\n\n    const exampleName = example.replace(/(?:^\\w|\\b\\w)/g, (letter) => letter.toUpperCase());\n\n    this.description = exampleConfig.title || exampleName.replace(/[\\-]+/g, ' ') + ' Example';\n    this.componentName = exampleConfig.selectorName ||\n                          exampleName.replace(/[\\-]+/g, '') + 'Example';\n  }\n}\n","\n/* tslint:disable */\n/** DO NOT MANUALLY EDIT THIS FILE, IT IS GENERATED VIA GULP 'build-examples-module' */\nimport {NgModule} from '@angular/core';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {CommonModule} from '@angular/common';\nimport {ExampleMosaicModule} from './mosaic-module';\nimport {ButtonBasicExample} from './button-basic/button-basic-example';\n\nexport interface LiveExample {\n  title: string;\n  component: any;\n  additionalFiles?: string[];\n  selectorName?: string;\n}\n\nexport const EXAMPLE_COMPONENTS: {[key: string]: LiveExample} = {\n  'button-basic': {\n    title: 'Basic buttons',\n    component: ButtonBasicExample\n  },\n};\n\nexport const EXAMPLE_LIST = [\n  ButtonBasicExample,\n];\n\n@NgModule({\n  declarations: EXAMPLE_LIST,\n  entryComponents: EXAMPLE_LIST,\n  imports: [\n    ExampleMosaicModule,\n    FormsModule,\n    ReactiveFormsModule,\n    CommonModule\n  ]\n})\nexport class ExampleModule { }\n","import { Component } from '@angular/core';\n\n\n/**\n * @title Basic buttons\n */\n@Component({\n    selector: 'button-basic-example',\n    templateUrl: 'button-basic-example.html',\n    styleUrls: ['button-basic-example.css']\n})\nexport class ButtonBasicExample {\n}\n","import {NgModule} from '@angular/core';\n\nimport {\n    McButtonModule\n} from '@ptsecurity/mosaic';\n\n\n@NgModule({\n    imports: [\n        McButtonModule\n    ],\n    exports: [\n        McButtonModule\n    ]\n})\nexport class ExampleMosaicModule {}\n"],"names":["tslib_1.__decorate"],"mappings":";;;;;;;;;;;;AIeA,IAAa,mBAAmB,GAAhC,MAAa,mBAAmB,CAAhC;CAAmC,CAAA;AAAtB,mBAAmB,GAAhCA,UAAA,CAAA;IARC,QAAQ,CAAC;QACN,OAAO,EAAE;YACL,cAAc;SACjB;QACD,OAAO,EAAE;YACL,cAAc;SACjB;KACJ,CAAC;CACF,EAAa,mBAAmB,CAAG,CAAnC;;ADZA;;;AAQA,AAAA,IAAa,kBAAkB,GAA/B,MAAa,kBAAkB,CAA/B;CACC,CAAA;AADY,kBAAkB,GAA/BA,UAAA,CAAA;IALC,SAAS,CAAC;QACP,QAAQ,EAAE,sBAAsB;QAChC,QAAJ,EAAA,sCAAA;QACI,MAAJ,EAAA,CAAa,iCAAb,CAAA;KACC,CAAC;CACF,EAAa,kBAAkB,CAC9B,CADD;;ADKA,MAAa,kBAAkB,GAAiC;IAC9D,cAAc,EAAE;QACd,KAAK,EAAE,eAAe;QACtB,SAAS,EAAE,kBAAkB;KAC9B;CACF,CAAC;AAEF,AAAA,MAAa,YAAY,GAAG;IAC1B,kBAAkB;CACnB,CAAC;AAYF,AAAA,IAAa,aAAa,GAA1B,MAAa,aAAa,CAA1B;CAA8B,CAAA;AAAjB,aAAa,GAA1BA,UAAA,CAAA;IAVC,QAAQ,CAAC;QACR,YAAY,EAAE,YAAY;QAC1B,eAAe,EAAE,YAAY;QAC7B,OAAO,EAAE;YACP,mBAAmB;YACnB,WAAW;YACX,mBAAmB;YACnB,YAAY;SACb;KACF,CAAC;CACF,EAAa,aAAa,CAAI,CAA9B;;ADrCA;AACA,AAIA;;;;AAIA,AAAA,MAAa,WAAW,CAAxB;IAuBE,WAAF,CAAc,OAAe,EAA7B;QACI,IAAI,CAAC,OAAO,IAAI,CAAC,kBAAkB,CAAC,cAAc,CAAC,OAAO,CAAC,EAAE;YAC3D,OAAO;SACR;QAED,MAAM,aAAa,GAAG,kBAAkB,CAAC,OAAO,CAAC,CAAC;;QAGlD,IAAI,CAAC,YAAY,GAAG,CAAC,MAAM,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,SAAS,KAAK,CAAjE,EAAoE,OAAO,CAA3E,SAAA,EAAuF,SAAS,CAAhG,CAAkG,CAAC,CAAC;QAChG,IAAI,CAAC,WAAW,GAAG,CAAvB,4BAAA,EAAsD,OAAO,CAA7D,CAAA,CAAgE,CAAC;QAC7D,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,aAAa,GAAG,CAA7C,EAAgD,OAAO,CAAvD,QAAA,CAAiE,CAAC;QAE9D,IAAI,aAAa,CAAC,eAAe,EAAE;YACjC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,GAAG,aAAa,CAAC,eAAe,CAAC,CAAC;SAC1D;QAED,MAAM,WAAW,GAAG,OAAO,CAAC,OAAO,CAAC,eAAe,EAAE,CAAC,MAAM,KAAK,MAAM,CAAC,WAAW,EAAE,CAAC,CAAC;QAEvF,IAAI,CAAC,WAAW,GAAG,aAAa,CAAC,KAAK,IAAI,WAAW,CAAC,OAAO,CAAC,QAAQ,EAAE,GAAG,CAAC,GAAG,UAAU,CAAC;QAC1F,IAAI,CAAC,aAAa,GAAG,aAAa,CAAC,YAAY;YACzB,WAAW,CAAC,OAAO,CAAC,QAAQ,EAAE,EAAE,CAAC,GAAG,SAAS,CAAC;KACrE;CACF;;ADtDD;;GAEG;;;;"}