{"version":3,"file":"mosaic-examples.umd.min.js","sources":["../../src/mosaic-examples/mosaic-module.ts","../../src/mosaic-examples/button-basic/button-basic-example.ts","../../src/mosaic-examples/example-module.ts","../../src/mosaic-examples/example-data.ts"],"sourcesContent":["import {NgModule} from '@angular/core';\n\nimport {\n    McButtonModule\n} from '@ptsecurity/mosaic';\n\n\n@NgModule({\n    imports: [\n        McButtonModule\n    ],\n    exports: [\n        McButtonModule\n    ]\n})\nexport class ExampleMosaicModule {}\n","import { Component } from '@angular/core';\n\n/**\n * @title Basic buttons\n */\n@Component({\n    selector: 'button-basic-example',\n    templateUrl: 'button-basic-example.html',\n    styleUrls: ['button-basic-example.css']\n})\nexport class ButtonBasicExample {\n}\n","\n/* tslint:disable */\n/** DO NOT MANUALLY EDIT THIS FILE, IT IS GENERATED VIA GULP 'build-examples-module' */\nimport {NgModule} from '@angular/core';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {CommonModule} from '@angular/common';\nimport {ExampleMosaicModule} from './mosaic-module';\nimport {ButtonBasicExample} from './button-basic/button-basic-example';\n\nexport interface LiveExample {\n  title: string;\n  component: any;\n  additionalFiles?: string[];\n  selectorName?: string;\n}\n\nexport const EXAMPLE_COMPONENTS: {[key: string]: LiveExample} = {\n  'button-basic': {\n    title: 'Basic buttons',\n    component: ButtonBasicExample\n  },\n};\n\nexport const EXAMPLE_LIST = [\n  ButtonBasicExample,\n];\n\n@NgModule({\n  declarations: EXAMPLE_LIST,\n  entryComponents: EXAMPLE_LIST,\n  imports: [\n    ExampleMosaicModule,\n    FormsModule,\n    ReactiveFormsModule,\n    CommonModule\n  ]\n})\nexport class ExampleModule { }\n","// The example-module file will be auto-generated. As soon as the\n// examples are being compiled, the module file will be generated.\nimport { EXAMPLE_COMPONENTS } from './example-module';\n\n\n/**\n * Example data\n *   with information about Component name, selector, files used in example, and path to examples\n */\nexport class ExampleData {\n\n  /** Description of the example. */\n  description: string;\n\n  /** Path to the example. This is based on the structure of the material.angular.io repo. */\n  examplePath: string;\n\n  /** List of files that are part of this example. */\n  exampleFiles: string[];\n\n  /** Selector name of the example component. */\n  selectorName: string;\n\n  /** Name of the file that contains the example component. */\n  indexFilename: string;\n\n  /**\n   * Name of the example component. For examples with multiple components, this property will\n   * include multiple components that are comma separated (e.g. dialog-overview)\n   */\n  componentName: string;\n\n  constructor(example: string) {\n    if (!example || !EXAMPLE_COMPONENTS.hasOwnProperty(example)) {\n      return;\n    }\n\n    const exampleConfig = EXAMPLE_COMPONENTS[example];\n\n    // TODO(tinayuangao): Do not hard-code extensions\n    this.exampleFiles = ['html', 'ts', 'css'].map(extension => `${example}-example.${extension}`);\n    this.examplePath = `/assets/stackblitz/examples/${example}/`;\n    this.selectorName = this.indexFilename = `${example}-example`;\n\n    if (exampleConfig.additionalFiles) {\n      this.exampleFiles.push(...exampleConfig.additionalFiles);\n    }\n\n    const exampleName = example.replace(/(?:^\\w|\\b\\w)/g, letter => letter.toUpperCase());\n\n    this.description = exampleConfig.title || exampleName.replace(/[\\-]+/g, ' ') + ' Example';\n    this.componentName = exampleConfig.selectorName ||\n                          exampleName.replace(/[\\-]+/g, '') + 'Example';\n  }\n}\n"],"names":["ExampleMosaicModule","type","NgModule","args","imports","McButtonModule","exports","Component","selector","template","styles","ButtonBasicExample","EXAMPLE_COMPONENTS","button-basic","title","component","EXAMPLE_LIST","declarations","entryComponents","FormsModule","ReactiveFormsModule","CommonModule","ExampleModule","ExampleData","example","hasOwnProperty","exampleConfig","this","exampleFiles","map","extension","examplePath","selectorName","indexFilename","additionalFiles","_a","push","apply","exampleName","replace","letter","toUpperCase","description","componentName"],"mappings":"8dAAA,IAAAA,GAAA,yBAAA,sBAOAC,KAACC,EAAAA,SAADC,OACIC,SACIC,EAAAA,gBAEJC,SACID,EAAAA,oBAZRL,gCCAA,sBAKAC,KAACM,EAAAA,UAADJ,OACIK,SAAU,uBACVC,SAAJ,uCACIC,QAAS,uCARbC,KCgBaC,GACXC,gBACEC,MAAO,gBACPC,UAAWJ,IAIFK,GACXL,8BAxBF,sBA2BAV,KAACC,EAAAA,SAADC,OACEc,aAAcD,EACdE,gBAAiBF,EACjBZ,SACEJ,EACAmB,EAAAA,YACAC,EAAAA,oBACAC,EAAAA,kBAlCJC,KCSAC,EAAA,WAuBE,QAAFA,GAAcC,GACV,GAAKA,GAAYZ,EAAmBa,eAAeD,GAAnD,CAIA,GAAME,GAAgBd,EAAmBY,EAGzCG,MAAKC,cAAgB,OAAQ,KAAM,OAAOC,IAAI,SAAAC,GAAa,MAAGN,GAAlE,YAAqFM,IACjFH,KAAKI,YAAc,+BAA+BP,EAAtD,IACIG,KAAKK,aAAeL,KAAKM,cAAmBT,EAAhD,WAEQE,EAAcQ,kBAChBC,EAAAR,KAAKC,cAAaQ,KAAxBC,MAAAF,EAAgCT,EAAcQ,gBAG1C,IAAMI,GAAcd,EAAQe,QAAQ,gBAAiB,SAAAC,GAAU,MAAAA,GAAOC,eAEtEd,MAAKe,YAAchB,EAAcZ,OAASwB,EAAYC,QAAQ,SAAU,KAAO,WAC/EZ,KAAKgB,cAAgBjB,EAAcM,cACbM,EAAYC,QAAQ,SAAU,IAAM,iBApD9D,MAAAhB"}